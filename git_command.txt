1. git init: initialize (local)
2. git config --global user.email "user email"
   git config --global user.name "user name"
3. git add readme.txt
4. git commit -m "comment"
5. git log
6. git checkout 5813bb5(commit id's first 7 digit)
7. git checkout -: restore latest
8. git remote add orgin https://github.com/gigoc/~
9. git push origin master or git push origin +master
10. git clone https://github.com/gigoc/~ .
11. git pull origin master
12. git config --list
    - show current settings
13. git remote set-url origin <new giturl>
14: git pull 명령시에 untracked working tree files overwritten 나올때:
    git clean -d -f -f
15. gitignoer 파일 추가시 로컬저장소의 index 삭제
    - git rm -r --cached .
    - 이후에 (git add ., git commit, git push 수행)
    - 출처: https://dev-jwblog.tistory.com/51
16. git pull 에러 해결(Your local changes to the following files would be overwritten by merge)
   - 방법1 (git stash -> git pull origin master -> git stash pop, or git stash && git pull origin master && git stash pop)
   - 방법2 (git add를 하고 git pull 수행)
   - 출처: https://goddaehee.tistory.com/253
17. 작업 트리에서 수정한 파일 되돌리기 명령어
   - git restore test.txt
18. 스테이징 되돌리기 명령어(git add 통해 스테이지에 올라간 것을 다시 내린다는 뜻)
   - git restore --staged test.txt
19. Filename too long error 발생 시 해결법: 윈도우의 path 길이제한을 변경
   - git config --global(or system) core.longpaths true
   - 위 명령어를 통해 260 --> 4096 까지 길이 증가